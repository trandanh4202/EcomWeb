{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DATA_FAIL, ORDER_DATA_REQUEST, ORDER_DATA_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../Constants/OrderConstants\";\nimport { logout } from \"./UserAction\";\n\n//ORDER CREATE\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/orders\", order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/OrderDetails?orderId=${orderId}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS\n      // payload: data.data,\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\n\n//ORDER DETAILS\nexport const getOrders = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DATA_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/Orders/${orderId}`, config);\n    dispatch({\n      type: ORDER_DATA_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DATA_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/Orders/PaypalCheckout/${orderId}`, orderId, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DATA_FAIL","ORDER_DATA_REQUEST","ORDER_DATA_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","getOrderDetails","orderId","get","getOrders","payOrder","put","listOrders"],"sources":["E:/website/React/Clone3/Shoe/FETT2/EcomWeb22/src/Redux/Action/OrderAction.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DATA_FAIL,\n  ORDER_DATA_REQUEST,\n  ORDER_DATA_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../Constants/OrderConstants\";\nimport { logout } from \"./UserAction\";\n\n//ORDER CREATE\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(\"/api/orders\", order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `/api/OrderDetails?orderId=${orderId}`,\n      config\n    );\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      // payload: data.data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    });\n  }\n};\n\n//ORDER DETAILS\nexport const getOrders = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DATA_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/Orders/${orderId}`, config);\n    dispatch({\n      type: ORDER_DATA_SUCCESS,\n      payload: data.data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DATA_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const payOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_PAY_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/Orders/PaypalCheckout/${orderId}`,\n      orderId,\n      config\n    );\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data.data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data.data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}