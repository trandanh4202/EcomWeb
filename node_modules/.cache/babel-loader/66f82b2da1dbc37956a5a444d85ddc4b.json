{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productCreateReviewReducer, productDetailsReducer, productListForYouReducer, productListReducer, reviewListReducer } from \"./Reducer/ProductReducers\";\nimport { cartListReducer, cartReducer, cartReducer2, cartRemoveReducer, cartUpdateReducer } from \"./Reducer/CartReducer\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./Reducer/UserReducer\";\nimport { orderCreateReducer, orderDataReducer, orderDetailsReducer, orderListReducer, orderPayReducer } from \"./Reducer/OrderReduce\";\nimport { addressDetailReducer, addressReducer } from \"./Reducer/ShippingReducer\";\nimport { brandListReducer, categoryListReducer } from \"./Reducer/FilterReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  brandList: brandListReducer,\n  categoryList: categoryListReducer,\n  productDetails: productDetailsReducer,\n  productReviewCreate: productCreateReviewReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderData: orderDataReducer,\n  address: addressReducer,\n  addressDetail: addressDetailReducer,\n  cartList: cartListReducer,\n  orderList: orderListReducer,\n  orderPay: orderPayReducer,\n  reviewList: reviewListReducer,\n  productListForYou: productListForYouReducer\n});\n\n// login\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst paymentMethodLocalstorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : {};\nconst initialState = {\n  cartList: {\n    paypalMethod: paymentMethodLocalstorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  },\n  orderData: {\n    paypalMethod: paymentMethodLocalstorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productCreateReviewReducer","productDetailsReducer","productListForYouReducer","productListReducer","reviewListReducer","cartListReducer","cartReducer","cartReducer2","cartRemoveReducer","cartUpdateReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDataReducer","orderDetailsReducer","orderListReducer","orderPayReducer","addressDetailReducer","addressReducer","brandListReducer","categoryListReducer","reducer","productList","brandList","categoryList","productDetails","productReviewCreate","userLogin","userRegister","userDetails","orderCreate","orderDetails","orderData","address","addressDetail","cartList","orderList","orderPay","reviewList","productListForYou","userInfoFromLocalStorage","localStorage","getItem","JSON","parse","paymentMethodLocalstorage","initialState","paypalMethod","userInfo","middleware","store"],"sources":["E:/website/React/Clone3/Shoe/FETT2/EcomWeb22/src/Redux/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productCreateReviewReducer,\n  productDetailsReducer,\n  productListForYouReducer,\n  productListReducer,\n  reviewListReducer,\n} from \"./Reducer/ProductReducers\";\nimport {\n  cartListReducer,\n  cartReducer,\n  cartReducer2,\n  cartRemoveReducer,\n  cartUpdateReducer,\n} from \"./Reducer/CartReducer\";\nimport {\n  userDetailsReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n} from \"./Reducer/UserReducer\";\nimport {\n  orderCreateReducer,\n  orderDataReducer,\n  orderDetailsReducer,\n  orderListReducer,\n  orderPayReducer,\n} from \"./Reducer/OrderReduce\";\nimport {\n  addressDetailReducer,\n  addressReducer,\n} from \"./Reducer/ShippingReducer\";\nimport { brandListReducer, categoryListReducer } from \"./Reducer/FilterReducer\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  brandList: brandListReducer,\n  categoryList: categoryListReducer,\n  productDetails: productDetailsReducer,\n  productReviewCreate: productCreateReviewReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderData: orderDataReducer,\n  address: addressReducer,\n  addressDetail: addressDetailReducer,\n  cartList: cartListReducer,\n  orderList: orderListReducer,\n  orderPay: orderPayReducer,\n  reviewList: reviewListReducer,\n  productListForYou: productListForYouReducer,\n});\n\n// login\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst paymentMethodLocalstorage = localStorage.getItem(\"paymentMethod\")\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\n  : {};\n\nconst initialState = {\n  cartList: {\n    paypalMethod: paymentMethodLocalstorage,\n  },\n  userLogin: { userInfo: userInfoFromLocalStorage },\n  orderData: {\n    paypalMethod: paymentMethodLocalstorage,\n  },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,0BAA0B,EAC1BC,qBAAqB,EACrBC,wBAAwB,EACxBC,kBAAkB,EAClBC,iBAAiB,QACZ,2BAA2B;AAClC,SACEC,eAAe,EACfC,WAAW,EACXC,YAAY,EACZC,iBAAiB,EACjBC,iBAAiB,QACZ,uBAAuB;AAC9B,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,EACnBC,wBAAwB,QACnB,uBAAuB;AAC9B,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,EACnBC,gBAAgB,EAChBC,eAAe,QACV,uBAAuB;AAC9B,SACEC,oBAAoB,EACpBC,cAAc,QACT,2BAA2B;AAClC,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,yBAAyB;AAE/E,MAAMC,OAAO,GAAG3B,eAAe,CAAC;EAC9B4B,WAAW,EAAErB,kBAAkB;EAC/BsB,SAAS,EAAEJ,gBAAgB;EAC3BK,YAAY,EAAEJ,mBAAmB;EACjCK,cAAc,EAAE1B,qBAAqB;EACrC2B,mBAAmB,EAAE5B,0BAA0B;EAC/C6B,SAAS,EAAElB,gBAAgB;EAC3BmB,YAAY,EAAElB,mBAAmB;EACjCmB,WAAW,EAAErB,kBAAkB;EAC/BsB,WAAW,EAAElB,kBAAkB;EAC/BmB,YAAY,EAAEjB,mBAAmB;EACjCkB,SAAS,EAAEnB,gBAAgB;EAC3BoB,OAAO,EAAEf,cAAc;EACvBgB,aAAa,EAAEjB,oBAAoB;EACnCkB,QAAQ,EAAEhC,eAAe;EACzBiC,SAAS,EAAErB,gBAAgB;EAC3BsB,QAAQ,EAAErB,eAAe;EACzBsB,UAAU,EAAEpC,iBAAiB;EAC7BqC,iBAAiB,EAAEvC;AACrB,CAAC,CAAC;;AAEF;AACA,MAAMwC,wBAAwB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAC7DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,yBAAyB,GAAGJ,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,GACnEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,GACjD,CAAC,CAAC;AAEN,MAAMI,YAAY,GAAG;EACnBX,QAAQ,EAAE;IACRY,YAAY,EAAEF;EAChB,CAAC;EACDlB,SAAS,EAAE;IAAEqB,QAAQ,EAAER;EAAyB,CAAC;EACjDR,SAAS,EAAE;IACTe,YAAY,EAAEF;EAChB;AACF,CAAC;AAED,MAAMI,UAAU,GAAG,CAACrD,KAAK,CAAC;AAE1B,MAAMsD,KAAK,GAAGzD,WAAW,CACvB4B,OAAO,EACPyB,YAAY,EACZjD,mBAAmB,CAACF,eAAe,CAAC,GAAGsD,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}