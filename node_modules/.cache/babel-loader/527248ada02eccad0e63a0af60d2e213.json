{"ast":null,"code":"import axios from \"axios\";\nimport { BRAND_LIST_FAIL, BRAND_LIST_REQUEST, BRAND_LIST_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../Constants/FilterConstants\";\nexport const listCategories = () => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/Categories\");\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listBrands = () => async dispatch => {\n  try {\n    dispatch({\n      type: BRAND_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/brands\");\n    dispatch({\n      type: BRAND_LIST_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: BRAND_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","BRAND_LIST_FAIL","BRAND_LIST_REQUEST","BRAND_LIST_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","listCategories","dispatch","type","data","get","payload","error","response","message","listBrands"],"sources":["E:/website/React/Clone3/Shoe/FETT2/EcomWeb22/src/Redux/Action/FilterAction.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  BRAND_LIST_FAIL,\n  BRAND_LIST_REQUEST,\n  BRAND_LIST_SUCCESS,\n  CATEGORY_LIST_FAIL,\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n} from \"../Constants/FilterConstants\";\n\nexport const listCategories = () => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_LIST_REQUEST });\n\n    const { data } = await axios.get(\"/api/Categories\");\n\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listBrands = () => async (dispatch) => {\n  try {\n    dispatch({ type: BRAND_LIST_REQUEST });\n\n    const { data } = await axios.get(\"/api/brands\");\n\n    dispatch({\n      type: BRAND_LIST_SUCCESS,\n      payload: data.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BRAND_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QAChB,8BAA8B;AAErC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAsB,CAAC,CAAC;IAEzC,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iBAAiB,CAAC;IAEnDH,QAAQ,CAAC;MACPC,IAAI,EAAEH,qBAAqB;MAC3BM,OAAO,EAAEF,IAAI,CAACA;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEL,kBAAkB;MACxBQ,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAOR,QAAQ,IAAK;EAClD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAmB,CAAC,CAAC;IAEtC,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,aAAa,CAAC;IAE/CH,QAAQ,CAAC;MACPC,IAAI,EAAEN,kBAAkB;MACxBS,OAAO,EAAEF,IAAI,CAACA;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAER,eAAe;MACrBW,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module"}