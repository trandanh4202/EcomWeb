{"ast":null,"code":"import axios from \"axios\";\nimport { CART_REMOVE_ITEM_FAIL, CART_REMOVE_ITEM_REQUEST, CART_REMOVE_ITEM_SUCCESS } from \"../Constants/CartConstants\";\nimport { ADD_ADDRESS_REQUEST, ADD_ADDRESS_SUCCESS, ADD_ADDRESS_FAIL, LIST_ADDRESS_REQUEST, LIST_ADDRESS_SUCCESS, LIST_ADDRESS_FAIL, GET_ADDRESS_REQUEST, GET_ADDRESS_SUCCESS, GET_ADDRESS_FAIL, DELETE_ADDRESS_REQUEST, DELETE_ADDRESS_SUCCESS, DELETE_ADDRESS_FAIL } from \"../Constants/ShippingConstants\";\nexport const saveShippingAddress = (province, district, ward, detail) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_ADDRESS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      message\n    } = await axios.post(\"/api/Addresses\", {\n      province,\n      district,\n      ward,\n      detail\n    }, config);\n    const {\n      data\n    } = await axios.get(\"/api/Addresses\", config);\n    dispatch({\n      type: ADD_ADDRESS_SUCCESS,\n      payload: data.data\n    });\n    // localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ADD_ADDRESS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listAddress = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LIST_ADDRESS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/Addresses\", config);\n    dispatch({\n      type: LIST_ADDRESS_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_ADDRESS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getAddress = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_ADDRESS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/Addresses/${id}`, config);\n    dispatch({\n      type: GET_ADDRESS_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ADDRESS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeAddress = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: DELETE_ADDRESS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      success\n    } = await axios.delete(`/api/Addresses/${id}`, config);\n    const {\n      data\n    } = await axios.get(\"/api/Addresses\", config);\n    dispatch({\n      type: DELETE_ADDRESS_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ADDRESS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","CART_REMOVE_ITEM_FAIL","CART_REMOVE_ITEM_REQUEST","CART_REMOVE_ITEM_SUCCESS","ADD_ADDRESS_REQUEST","ADD_ADDRESS_SUCCESS","ADD_ADDRESS_FAIL","LIST_ADDRESS_REQUEST","LIST_ADDRESS_SUCCESS","LIST_ADDRESS_FAIL","GET_ADDRESS_REQUEST","GET_ADDRESS_SUCCESS","GET_ADDRESS_FAIL","DELETE_ADDRESS_REQUEST","DELETE_ADDRESS_SUCCESS","DELETE_ADDRESS_FAIL","saveShippingAddress","province","district","ward","detail","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","message","post","data","get","payload","error","response","listAddress","getAddress","id","removeAddress","success","delete"],"sources":["E:/website/React/Clone3/Shoe/FETT2/EcomWeb22/src/Redux/Action/ShippingAction.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  CART_REMOVE_ITEM_FAIL,\n  CART_REMOVE_ITEM_REQUEST,\n  CART_REMOVE_ITEM_SUCCESS,\n} from \"../Constants/CartConstants\";\nimport {\n  ADD_ADDRESS_REQUEST,\n  ADD_ADDRESS_SUCCESS,\n  ADD_ADDRESS_FAIL,\n  LIST_ADDRESS_REQUEST,\n  LIST_ADDRESS_SUCCESS,\n  LIST_ADDRESS_FAIL,\n  GET_ADDRESS_REQUEST,\n  GET_ADDRESS_SUCCESS,\n  GET_ADDRESS_FAIL,\n  DELETE_ADDRESS_REQUEST,\n  DELETE_ADDRESS_SUCCESS,\n  DELETE_ADDRESS_FAIL,\n} from \"../Constants/ShippingConstants\";\n\nexport const saveShippingAddress =\n  (province, district, ward, detail) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADD_ADDRESS_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { message } = await axios.post(\n        \"/api/Addresses\",\n        { province, district, ward, detail },\n        config\n      );\n\n      const { data } = await axios.get(\"/api/Addresses\", config);\n\n      dispatch({\n        type: ADD_ADDRESS_SUCCESS,\n        payload: data.data,\n      });\n      // localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: ADD_ADDRESS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listAddress = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LIST_ADDRESS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\"/api/Addresses\", config);\n    dispatch({\n      type: LIST_ADDRESS_SUCCESS,\n      payload: data.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_ADDRESS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getAddress = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_ADDRESS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/Addresses/${id}`, config);\n    dispatch({\n      type: GET_ADDRESS_SUCCESS,\n      payload: data.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ADDRESS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const removeAddress = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: DELETE_ADDRESS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { success } = await axios.delete(`/api/Addresses/${id}`, config);\n    const { data } = await axios.get(\"/api/Addresses\", config);\n\n    dispatch({\n      type: DELETE_ADDRESS_SUCCESS,\n      payload: data.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ADDRESS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}